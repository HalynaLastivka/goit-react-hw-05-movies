{"version":3,"file":"static/js/450.6745b954.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","components/MovieListItem.jsx","components/MoviesList.jsx","pages/HomePage.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { imgPath } from 'services/api';\nimport css from 'app.module.css';\n\nconst MovieListItem = ({ id, title, path, location }) => {\n  const defaultImg = 'https://via.placeholder.com/150x220';\n  return (\n    <li className={css.movieListItem} key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <img\n          src={path ? `${imgPath + path}` : defaultImg}\n          alt={title}\n          width={200}\n        ></img>\n        <h3 className={css.fixedwidthtitle}>{title}</h3>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieListItem;\n","import React from 'react';\nimport MovieListItem from './MovieListItem';\nimport css from 'app.module.css';\n\nconst MoviesList = ({ movies, location }) => {\n  const showMovies = Array.isArray(movies) && movies.length;\n\n  return (\n    <ul className={css.movieList}>\n      {showMovies &&\n        movies.map(movie => {\n          return (\n            <MovieListItem\n              id={movie.id}\n              title={movie.title}\n              path={movie.poster_path}\n              location={location}\n\n              //   userId={post.userId}\n              //   body={post.body}\n              //   key={post.id}\n            />\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import ErrorMessage from 'components/ErrorMessage';\nimport Loader from 'components/Loader';\nimport css from 'app.module.css';\nimport MoviesList from 'components/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchAll } from 'services/api';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchAllMovies = async () => {\n      try {\n        setIsLoading(true);\n        const postsData = await fetchAll();\n\n        setMovies(postsData.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAllMovies();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      <h1 className={css.titlemain}>Trending today</h1>\n      <MoviesList movies={movies} location={location} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const imgPath = 'https://image.tmdb.org/t/p/w200/';\n\nconst fetchData = async url => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MTYxZTIyYTI0YmJiOWU0OTdjOGZlZDU1NGQ0NjkzMyIsInN1YiI6IjY1Mjk4NTU3MzU4ZGE3MDBjNmYwNzAxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VL6lmG_08LXTLUfrYFhS4bUBBPTIOydGR3Un7j9UxcI',\n    },\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const findMovieById = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n  return fetchData(url);\n};\n\nexport const findMovieReviewById = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n  return fetchData(url);\n};\n\nexport const findbySearchWord = async movieId => {\n  const url = `https://api.themoviedb.org/3/search/movie??include_adult=false&language=en-US&page=1&query=${movieId}`;\n  return fetchData(url);\n};\n\nexport const findMovieCastById = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n  return fetchData(url);\n};\n\nexport const fetchAll = async (postId, page) => {\n  const url = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\n  return fetchData(url);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["message","className","id","title","path","location","css","state","from","to","src","imgPath","alt","width","movies","showMovies","Array","isArray","length","map","movie","MovieListItem","poster_path","useState","setMovies","isLoading","setIsLoading","error","setError","useLocation","useEffect","fetchAllMovies","fetchAll","postsData","results","Loader","ErrorMessage","fetchData","url","options","method","headers","accept","Authorization","fetch","response","json","data","console","findMovieById","movieId","findMovieReviewById","findbySearchWord","findMovieCastById","postId","page","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}