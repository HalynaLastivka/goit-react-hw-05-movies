{"version":3,"file":"static/js/884.c8b9e723.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","pages/MovieDetails.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nimport { findMovieById, imgPath } from 'services/api';\n// import MovieCast from './MovieCast';\n// import MovieReview from './MovieReview';\nimport ErrorMessage from 'components/ErrorMessage';\nimport Loader from 'components/Loader';\nimport css from 'app.module.css';\n\nconst MovieCast = lazy(() => import('pages/MovieCast'));\nconst MovieReview = lazy(() => import('pages/MovieReview'));\n\nconst MovieDetails = () => {\n  const defaultImg = 'https://via.placeholder.com/150x220';\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchGetMovie = async () => {\n      try {\n        setIsLoading(true);\n        const movieData = await findMovieById(movieId);\n\n        setMovieDetails(movieData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchGetMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go Back</Link>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {movieDetails !== null && (\n        <>\n          <div className={css.wrapperMovie}>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `${imgPath + movieDetails.poster_path}`\n                  : defaultImg\n              }\n              alt={movieDetails.title}\n              width={200}\n            ></img>\n            <div class=\"info-movie\">\n              <h2>{movieDetails.title}</h2>\n              <p className={css.titleadd}>\n                User score: {movieDetails.vote_average}\n              </p>\n              <p className={css.titleadd}>Overview</p>\n              <p className={css.overview}>{movieDetails.overview}</p>\n              <p className={css.titleadd}>Genres</p>\n              <div className={css.wrapgenres}>\n                {movieDetails.genres.map(genre => {\n                  return <p>{genre.name}</p>;\n                })}\n              </div>\n            </div>\n          </div>\n\n          <div className={css.wrapperadd}>\n            <div>\n              <p className={css.titleadd}>Additional information</p>\n              <ul className={css.addList}>\n                <li>\n                  <NavLink\n                    to=\"cast\"\n                    className={({ isActive }) =>\n                      `${css['addlink']} ${isActive ? css.active : ''}`\n                    }\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    to=\"review\"\n                    className={({ isActive }) =>\n                      `${css['addlink']} ${isActive ? css.active : ''}`\n                    }\n                  >\n                    Review\n                  </NavLink>\n                </li>\n              </ul>\n              <Suspense fallback={<Loader />}>\n                <Routes>\n                  <Route path=\"cast\" element={<MovieCast />} />\n                  <Route path=\"review\" element={<MovieReview />} />\n                </Routes>\n              </Suspense>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export const imgPath = 'https://image.tmdb.org/t/p/w200/';\n\nconst fetchData = async url => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MTYxZTIyYTI0YmJiOWU0OTdjOGZlZDU1NGQ0NjkzMyIsInN1YiI6IjY1Mjk4NTU3MzU4ZGE3MDBjNmYwNzAxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VL6lmG_08LXTLUfrYFhS4bUBBPTIOydGR3Un7j9UxcI',\n    },\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const findMovieById = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n  return fetchData(url);\n};\n\nexport const findMovieReviewById = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n  return fetchData(url);\n};\n\nexport const findbySearchWord = async movieId => {\n  const url = `https://api.themoviedb.org/3/search/movie??include_adult=false&language=en-US&page=1&query=${movieId}`;\n  return fetchData(url);\n};\n\nexport const findMovieCastById = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n  return fetchData(url);\n};\n\nexport const fetchAll = async (postId, page) => {\n  const url = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\n  return fetchData(url);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["message","className","MovieCast","lazy","MovieReview","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","useEffect","fetchGetMovie","findMovieById","movieData","to","current","css","src","poster_path","imgPath","alt","title","width","class","vote_average","overview","genres","map","genre","name","isActive","Suspense","fallback","path","element","fetchData","url","options","method","headers","accept","Authorization","fetch","response","json","data","console","findMovieReviewById","findbySearchWord","findMovieCastById","fetchAll","postId","page","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}